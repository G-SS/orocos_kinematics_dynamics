language: cpp
os: linux
dist: xenial

env:
  global:
    - CXXFLAGS="-Wall -Wextra -Wno-unused-parameter"

jobs:
  include:
    - &cmake
      stage: CMake
      name: GCC Debug
      env: OROCOS_KDL_BUILD_TYPE=Debug
      compiler: gcc
    - <<: *cmake
      name: GCC Release
      env: OROCOS_KDL_BUILD_TYPE=Release
      compiler: gcc
    - <<: *cmake
      name: CLang Debug
      env: OROCOS_KDL_BUILD_TYPE=Debug
      compiler: clang
    - <<: *cmake
      name: CLang Release
      env: OROCOS_KDL_BUILD_TYPE=Release
      compiler: clang
    - &industrial-ci
      stage: Industrial CI
      name: Industrial CI Kinetic
      env: ROS_DISTRO="kinetic" ROS_REPO=ros ABICHECK_URL='github:orocos/orocos_kinematics_dynamics#release-1.3'
      compiler: gcc
      services: docker
      install: git clone https://github.com/ros-industrial/industrial_ci.git -b master .ci_config
      script: source .ci_config/travis.sh
      if: branch = release-1.3
    - <<: *industrial-ci
      name: Industrial CI Melodic
      env: ROS_DISTRO="melodic" ROS_REPO=ros ABICHECK_URL='github:orocos/orocos_kinematics_dynamics#release-1.4' ABICHECK_MERGE=auto
      if: branch = release-1.4

install:
  - sudo apt-get -qq update
  - sudo apt-get install -y libeigen3-dev libcppunit-dev python-sip-dev
  # build orocos_kdl
  - cd orocos_kdl
  - mkdir build
  - cd build
  - cmake -DENABLE_TESTS:BOOL=ON -DCMAKE_BUILD_TYPE=${OROCOS_KDL_BUILD_TYPE} ./..
  # compile and install orocos_kdl
  - make
  - sudo make install
  - cd ../..

  # build python bindings python 2
  - cd python_orocos_kdl
  - mkdir build2
  - cd build2
  - export ROS_PYTHON_VERSION=2
  - cmake -DCMAKE_BUILD_TYPE=${OROCOS_KDL_BUILD_TYPE} ./..
  # compile and install python bindings python 2
  - make
  - sudo make install
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
  - sudo ldconfig
  - cd ../..

script:
  # execute orocos_kdl tests
  - cd orocos_kdl/build
  - make check
  - cd ../..
  # execute python bindings tests
  - cd python_orocos_kdl
  # python 2
  - python2 tests/PyKDLtest.py
